#include "common.c"

int main()
{
	//服务器端和客户端的地址结构
	struct sockaddr_in sin,cin;
	//地址结构的长度
	socklen_t len = sizeof(cin);
	//套接字的标识符
	int lfd,cfd,fd;
	//进程的标志符
	pid_t pid;
	//套接字选项
	int sock_opt = 1;
	//端口号
	int port;
	//文件路径缓冲区
	char path[MAX_LINE];
	//文件的状态结构
	struct stat statbuf;
	//安装信号处理函数
	//在一个进程终止或者停止时，将SIGCHLD信号发送给其父进程。按系统默认将忽略此信号。如果父进程希望被告知其子系统的这种状态，则应捕捉此信号。信号的捕捉函数中通常调用wait函数以取得进程ID和其终止状态。
	signal(SIGCHLD,SIG_IGN);		//对SIGCHLD信号用SIG_IGN处理
	signal(SIGPIPE,SIG_IGN)			//对SIGPIPE信号用SIG_IGN处理
	printf("initializing...\n");
	if(init(&sin,&lfd,&port,path) == -1)	//初始化
	{
		DEBUG_PRINT("init error\n");
		exit(1);
	}
	
	//不断接收并且处理连接请求
	while(1)
	{
		DEBUG_PRINT();
	}
	
	return 0;
}
